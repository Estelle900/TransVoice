q()
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/processing.R")
setwd("C:\\Users\\1zhiy\\Desktop\\Stuff\\Code\\TransVoice\\TransVoice")
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/processing.R")
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/wav_to_csv.R")
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/wav_to_csv.R")
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/wav_to_csv.R")
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/wav_to_csv.R")
print(wav_files)
print(wav_files)
library(tuneR)
library(seewave)
# Set the directory path where the WAV files are located
dir_path <- "\\clips"
# Get a list of all WAV files in the directory
wav_files <- list.files(dir_path, pattern = ".wav$", full.names = TRUE)
print(wav_files)
library(tuneR)
library(seewave)
# Set the directory path where the WAV files are located
dir_path <- "\\clips"
# Get a list of all WAV files in the directory
wav_files <- list.files(dir_path, pattern = ".wav$", full.names = TRUE)
print(wav_files)
library(tuneR)
library(seewave)
# Set the directory path where the WAV files are located
dir_path <- "\\clips"
# Get a list of all WAV files in the directory
wav_files <- list.files(dir_path, pattern = ".wav$", full.names = TRUE)
print(wav_files)
library(tuneR)
library(seewave)
# Set the directory path where the WAV files are located
dir_path <- "clips"
# Get a list of all WAV files in the directory
wav_files <- list.files(dir_path, pattern = "\\.wav$", full.names = TRUE)
print(wav_files)
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/wav_to_csv.R")
# Loop through each WAV file and extract the desired features
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
# Compute the spectral properties using the seewave package
specprop <- specprop(wave)
# Compute the other desired features
meanfreq <- mean(specprop$freq)/1000  # Convert from Hz to kHz
sd <- sd(specprop$freq)/1000
median <- median(specprop$freq)/1000
Q25 <- quantile(specprop$freq, 0.25)/1000
Q75 <- quantile(specprop$freq, 0.75)/1000
IQR <- IQR(specprop$freq)/1000
skew <- skewness(specprop$freq)
kurt <- kurtosis(specprop$freq)
sp.ent <- entropy(specprop$dB)
sfm <- spectralFlatness(wave)
mode <- specprop$freq[which.max(specprop$dB)]/1000
centroid <- centroid(specprop$freq, specprop$dB)/1000
peakf <- peakf(specprop$freq, specprop$dB)/1000
meanfun <- mean(pitch(wave))
minfun <- min(pitch(wave))
maxfun <- max(pitch(wave))
meandom <- mean(dominant(wave))
mindom <- min(dominant(wave))
maxdom <- max(dominant(wave))
dfrange <- maxdom - mindom
modindx <- modindx(wave)
# Combine the features into a single row of the data frame
row <- data.frame(
meanfreq = meanfreq,
sd = sd,
median = median,
Q25 = Q25,
Q75 = Q75,
IQR = IQR,
skew = skew,
kurt = kurt,
sp.ent = sp.ent,
sfm = sfm,
mode = mode,
centroid = centroid,
peakf = peakf,
meanfun = meanfun,
minfun = minfun,
maxfun = maxfun,
meandom = meandom,
mindom = mindom,
maxdom = maxdom,
dfrange = dfrange,
modindx = modindx
)
# Append the row to the data frame
features_df <- rbind(features_df, row)
}
wav_file <- wav_files
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
wav_file <- wav_files[0]
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
# Compute the spectral properties using the seewave package
specprop <- specprop(wave)
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
# Compute the spectral properties using the seewave package
specprop <- specprop(wave)
# Compute the other desired features
meanfreq <- mean(specprop$freq)/1000  # Convert from Hz to kHz
sd <- sd(specprop$freq)/1000
median <- median(specprop$freq)/1000
Q25 <- quantile(specprop$freq, 0.25)/1000
Q75 <- quantile(specprop$freq, 0.75)/1000
IQR <- IQR(specprop$freq)/1000
skew <- skewness(specprop$freq)
kurt <- kurtosis(specprop$freq)
sp.ent <- entropy(specprop$dB)
sfm <- spectralFlatness(wave)
mode <- specprop$freq[which.max(specprop$dB)]/1000
centroid <- centroid(specprop$freq, specprop$dB)/1000
peakf <- peakf(specprop$freq, specprop$dB)/1000
meanfun <- mean(pitch(wave))
minfun <- min(pitch(wave))
maxfun <- max(pitch(wave))
meandom <- mean(dominant(wave))
mindom <- min(dominant(wave))
maxdom <- max(dominant(wave))
dfrange <- maxdom - mindom
modindx <- modindx(wave)
# Combine the features into a single row of the data frame
row <- data.frame(
meanfreq = meanfreq,
sd = sd,
median = median,
Q25 = Q25,
Q75 = Q75,
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
# Compute the spectral properties using the seewave package
specprop <- specprop(wave)}
for (wav_file in wav_files) {
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
# Compute the spectral properties using the seewave package
specprop <- specprop(wave)}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
print(specprop(wave))
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
print(specprop(wave))}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
print(specprop(wave))}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
print(specprop(wave))}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
print(specprop(wave))}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
print(specprop(wave))}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
print(specprop(wave))}
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
print(specprop(wave))}
library(tuneR)
library(seewave)
# Set the directory path where the WAV files are located
dir_path <- "clips"
# Get a list of all WAV files in the directory
wav_files <- list.files(dir_path, pattern = "\\.wav$", full.names = TRUE)
print(wav_files)
# Initialize an empty data frame to store the extracted features
features_df <- data.frame()
# Loop through each WAV file and extract the desired features
for (wav_file in wav_files) {
# Load the WAV file using the tuneR package
wave <- readWave(wav_file)
print(specprop(wave))}
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/wav_to_csv.R")
wav_file <- "clips\\common_voice_en_33152279.mp3.wav"
wave <- readWave(wav_file)
print(specprop(wave))
library(tuneR)
wave <- readWave("clips\\common_voice_en_33152279.mp3.wav")
# Compute the spectral properties
library(seewave)
specprop <- specprop(wave, f = 1000, wl = "hann", spc = TRUE, dba = TRUE)
print(specprop)
# Load the sound file
library(tuneR)
wave <- readWave("clips\\common_voice_en_33152279.mp3.wav")
print(wave)
# Compute the spectral properties
library(seewave)
specprop <- specprop(wave, f = 1000, wl = "hann", spc = TRUE, dba = TRUE)
print(specprop)
library(tuneR)
wave <- readWave("clips\\common_voice_en_33152279.mp3.wav")
print(wave)
# Compute the spectral properties
library(seewave)
specprop <- specprop(wave, f = 1000, wl = "hann", spc = TRUE, dba = TRUE)
print(specprop(wave, f = 1000, wl = "hann", spc = TRUE, dba = TRUE))
wav_file <- "clips\\common_voice_en_33152279.mp3.wav"
library(seewave)
# Set the path to the WAV file
file_path <- "file.wav"
# Read the WAV file into a Wave object
wav <- readWave(file_path)
# Compute the spectrogram using specan()
spec <- specan(wav, wl = 256, ovlp = 128, db = TRUE, plot = FALSE)
# Extract some statistics from the spectrogram
max_freq <- max(spec$f)
mean_db <- mean(spec$spec[spec$spec > 0])
# Print the results
cat("Max frequency: ", max_freq, "\n")
cat("Mean dB: ", mean_db, "\n")
# Set the path to the WAV file
file_path <- "clips\\common_voice_en_33152279.mp3.wav"
# Read the WAV file into a Wave object
wav <- readWave(file_path)
# Compute the spectrogram using specan()
spec <- specan(wav, wl = 256, ovlp = 128, db = TRUE, plot = FALSE)
# Extract some statistics from the spectrogram
max_freq <- max(spec$f)
mean_db <- mean(spec$spec[spec$spec > 0])
# Print the results
cat("Max frequency: ", max_freq, "\n")
cat("Mean dB: ", mean_db, "\n")
# Print the results
cat("Max frequency: ", max_freq, "\n")
cat("Mean dB: ", mean_db, "\n")
library(seewave)
# Set the path to the WAV file
file_path <- "clips\\common_voice_en_33152279.mp3.wav"
# Read the WAV file into a Wave object
wav <- readWave(file_path)
# Compute the spectrogram using specan()
spec <- specan(wav, wl = 256, ovlp = 128, db = TRUE, plot = FALSE)
# Extract some statistics from the spectrogram
max_freq <- max(spec$f)
mean_db <- mean(spec$spec[spec$spec > 0])
# Print the results
cat("Max frequency: ", max_freq, "\n")
cat("Mean dB: ", mean_db, "\n")
library(seewave)
# Set the path to the WAV file
file_path <- "clips\\common_voice_en_33152279.mp3.wav"
# Read the WAV file into a Wave object
wav <- readWave(file_path)
# Compute the spectrogram using specan()
spec <- specan(wav, wl = 256, ovlp = 128, db = TRUE, plot = FALSE)
# Extract some statistics from the spectrogram
max_freq <- max(spec$f)
mean_db <- mean(spec$spec[spec$spec > 0])
# Print the results
print(cat("Max frequency: ", max_freq, "\n"))
print(cat("Mean dB: ", mean_db, "\n"))
library(seewave)
# Set the path to the WAV file
file_path <- "clips\\common_voice_en_33152279.mp3.wav"
# Read the WAV file into a Wave object
wav <- readWave(file_path)
# Compute the spectrogram using specan()
spec <- specan(wav, wl = 256, ovlp = 128, db = TRUE, plot = FALSE)
# Extract some statistics from the spectrogram
max_freq <- max(spec$f)
mean_db <- mean(spec$spec[spec$spec > 0])
print(max_freq)
library(seewave)
# Set the path to the WAV file
file_path <- "clips\\common_voice_en_33152279.mp3.wav"
# Read the WAV file into a Wave object
wav <- readWave(file_path)
# Compute the spectrogram using specan()
spec <- specan(wav, wl = 256, ovlp = 128, db = TRUE, plot = FALSE)
# Extract some statistics from the spectrogram
max_freq <- max(spec$f)
mean_db <- mean(spec$spec[spec$spec > 0])
print(max_freq)
library(seewave)
# Set the path to the WAV file
file_path <- "clips\\common_voice_en_33152279.mp3.wav"
# Read the WAV file into a Wave object
wav <- readWave(file_path)
# Compute the spectrogram using specan()
spec <- specan(wav, wl = 256, ovlp = 128, db = TRUE, plot = FALSE)
# Extract some statistics from the spectrogram
max_freq <- max(spec$f)
mean_db <- mean(spec$spec[spec$spec > 0])
print(max_freq)
file_path <- "clips\\common_voice_en_33152279.mp3.wav"
dataframe <- data.frame(list = c("sound.files", "selec", "start", "end"))
dataframe <- data.frame(file_path, 2, 1, 20)
names(dataframe) <- c("sound.files", "selec", "start", "end")
a <- specan(X=dataframe, bp=c(0,22))
file_path <- "clips\\common_voice_en_33152279.mp3.wav"
dataframe <- data.frame(list = c("sound.files", "selec", "start", "end"))
dataframe <- data.frame(file_path, 2, 1, 20)
names(dataframe) <- c("sound.files", "selec", "start", "end")
a <- specan(X=dataframe, bp=c(0,22))
print(a)
file_path <- "clips\\common_voice_en_33152279.mp3.wav"
dataframe <- data.frame(list = c("sound.files", "selec", "start", "end"))
dataframe <- data.frame(file_path, 2, 1, 20)
names(dataframe) <- c("sound.files", "selec", "start", "end")
a <- specan(X=dataframe, bp=c(0,22))
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/wav_to_csv.R")
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/wav_to_csv.R")
source("C:/Users/1zhiy/Desktop/Stuff/Code/TransVoice/TransVoice/wav_to_csv.R")
library(tuneR)
library(seewave)
file_path <- "clips\\common_voice_en_33152279.mp3.wav"
dataframe <- data.frame(list = c("sound.files", "selec", "start", "end"))
dataframe <- data.frame(file_path, 2, 1, 20)
names(dataframe) <- c("sound.files", "selec", "start", "end")
a <- specan(X=dataframe, bp=c(0,22))
print(a)
